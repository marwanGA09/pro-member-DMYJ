generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int              @id @unique @default(autoincrement())
  profileUrl    String           @default("")
  username      String           @unique @db.VarChar(80)
  first_name    String           @db.VarChar(80)
  middle_name   String           @db.VarChar(80)
  last_name     String           @db.VarChar(80)
  date_of_birth DateTime?        @db.Date
  email         String           @unique @db.VarChar(100)
  sector        Sector           @default(economy)
  password      String           @db.VarChar(200)
  role          Role             @default(guest)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  phone_number  String           @unique @db.VarChar(20)
  sex           Sex?
  members       Member[]
  payments      MonthlyPayment[]
}

model Member {
  id                Int              @id @unique @default(autoincrement())
  profession        String?          @db.VarChar(80)
  address           String           @db.VarChar(250)
  phone             String           @unique @db.VarChar(20)
  email             String?          @unique @db.VarChar(100)
  note              String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  book_number       String           @unique
  created_by        Int
  date_of_birth     DateTime?
  membership_amount Int
  profile_image     String?
  signed_date       DateTime         @default(now())
  full_name         String           @db.VarChar(150)
  sex               Sex
  user              User             @relation(fields: [created_by], references: [id])
  payments          MonthlyPayment[]
}

model MonthlyPayment {
  id             Int           @id @unique @default(autoincrement())
  year           Int
  member_id      Int
  user_id        Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  payment_method PaymentMethod @default(cash)
  month          Int?
  uuid           String
  member         Member        @relation(fields: [member_id], references: [id])
  user           User          @relation(fields: [user_id], references: [id])

  @@unique([month, year, member_id])
}

enum Role {
  user
  admin
  guest
}

enum Sector {
  economy
  academy
  social
  dawah
  management
  other
}

enum Sex {
  male
  female
}

enum PaymentMethod {
  cash
  bank_transfer
  other
}
